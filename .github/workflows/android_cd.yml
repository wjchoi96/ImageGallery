name: Android CD

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Access GOOGLE_SERVICES_JSON
      run: echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > ./app/google-services.json
      
    - name: Run unit tests
      run: ./gradlew test
      
    - name: Create android test report
      uses: asadmansr/android-test-report-action@v1.2.0
      if: ${{ always() }}   
  
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Cache Gradle packages
        uses: actions/cache@v3.0.11
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/buildSrc/**/*.kt') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Access GOOGLE_SERVICES_JSON
        run: echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > ./app/google-services.json

      - name: Gradel Build
        run: ./gradlew build

 
  release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle
        
    - name: Cache Gradle packages
      uses: actions/cache@v3.0.11
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/buildSrc/**/*.kt') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Access GOOGLE_SERVICES_JSON
      run: echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > ./app/google-services.json
      
    - name: Gradel Release Build
      run: ./gradlew assembleRelease
      
    - name: Sign APK
      id: sign_apk
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.KEY_BASE_64_RELEASE }}
        alias: ${{ secrets.KEY_ALIAS }}
        keyStorePassword: ${{ secrets.KEY_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}

    - name: Firebase App Distribution
      uses: wzieba/Firebase-Distribution-Github-Action@v1.4.0
      with:
        appId: ${{secrets.FIREBASE_APP_ID}}
        serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
        groups: android-developer
        file: app/build/outputs/apk/release/app-release-unsigned-signed.apk

